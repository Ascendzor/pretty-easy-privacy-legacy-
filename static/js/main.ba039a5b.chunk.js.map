{"version":3,"sources":["logo.svg","toClipboard.js","GenerateKeys.js","EncryptMessage.js","DecryptMessage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","toClipboard","_ref","label","data","console","log","window","toastr","info","GenerateKeys","_this$props","this","props","keypair","setKeypair","react_default","a","createElement","Paper_default","elevation","className","style","marginBottom","Fab_default","size","color","onClick","NodeRSA","b","VpnKey_default","display","gridTemplateColumns","gridGap","fontSize","height","textAlign","backgroundColor","borderRadius","padding","e","exportKey","wordBreak","Component","EncryptMessage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","message","publicKey","encryptedMessage","_this2","_this$state","TextField_default","fullWidth","id","placeholder","multiline","margin","variant","value","onChange","target","setState","InputProps","Promise","resolve","reject","encrypt","encryptMessage","then","Lock_default","DecryptMessage","privateKey","decryptedMessage","decrypt","catch","err","decryptMessage","options","progressBar","App","src","logo","alt","GenerateKeys_GenerateKeys","EncryptMessage_EncryptMessage","DecryptMessage_DecryptMessage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba039a5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import toClipboard from 'copy-text-to-clipboard'\n\nexport default ({label, data}) => {\n  console.log('clicked')\n  toClipboard(data)\n  window.toastr.info(label)\n\n  // toast('ðŸ¦„ - ' + label, {\n  //   position: \"top-right\",\n  //   autoClose: 5000,\n  //   hideProgressBar: false,\n  //   closeOnClick: true,\n  //   pauseOnHover: true,\n  //   draggable: true\n  // })\n}\n","import React, {Component} from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Icon from '@material-ui/core/Icon'\nimport Button from '@material-ui/core/Button'\nimport Fab from '@material-ui/core/Fab'\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport NodeRSA from 'node-rsa'\nimport Markdown from 'react-markdown'\nimport toClipboard from './toClipboard'\n\nexport default class GenerateKeys extends Component {\n  render() {\n    const {keypair, setKeypair} = this.props\n    const generateKeys = () => {\n      setKeypair(new NodeRSA({b: 512}))\n    }\n\n    return <Paper elevation={1} className='paper'>\n      <div className='title' style={{marginBottom: 20}}>\n        Keypair Generator\n      </div>\n      <div style={{marginBottom: 20}}>\n        <div style={{marginBottom: 10}}>Click this button to generate a new keypair</div>\n        <Fab size=\"small\" color=\"secondary\" onClick={generateKeys}>\n          <VpnKeyIcon />\n        </Fab>\n      </div>\n      <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gridGap: 15, fontSize: 10, height: 400}}>\n        <div>\n          <div style={{textAlign: 'center'}}>Private Key</div>\n          <div className='clipboarder' style={{backgroundColor: '#eee', borderRadius: 5, padding: 10}} onClick={e => {\n            if(!keypair) return\n            toClipboard({label: 'Copied private key to clipboard', data: keypair.exportKey('private')})\n          }}>\n            {keypair ? <div style={{wordBreak: 'break-all'}}>\n              {keypair.exportKey('private')}\n            </div> : '-'}\n          </div>\n        </div>\n        <div>\n          <div style={{textAlign: 'center'}}>Public Key</div>\n          <div className='clipboarder' style={{backgroundColor: '#eee', borderRadius: 5, padding: 10}} onClick={e => {\n            if(!keypair) return\n            toClipboard({label: 'Copied public key to clipboard', data: keypair.exportKey('public')})\n          }}>\n            {keypair ? <div style={{wordBreak: 'break-all'}}>\n              {keypair.exportKey('public')}\n            </div> : '-'}\n          </div>\n        </div>\n      </div>\n    </Paper>\n  }\n}\n","import React, {Component} from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Icon from '@material-ui/core/Icon'\nimport Fab from '@material-ui/core/Fab'\nimport TextField from '@material-ui/core/TextField'\nimport LockIcon from '@material-ui/icons/Lock';\nimport NodeRSA from 'node-rsa'\nimport Markdown from 'react-markdown'\nimport toClipboard from './toClipboard'\n\nconst encryptMessage = ({publicKey, message}) => new Promise((resolve, reject) => {\n\n  if(!publicKey) return reject()\n  if(!message) return reject()\n\n  const key = new NodeRSA(publicKey)\n  const encryptedMessage = key.encrypt(message, 'base64')\n  resolve(encryptedMessage)\n})\n\nexport default class EncryptMessage extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      message: null,\n      publicKey: null,\n      encryptedMessage: null\n    }\n\n    // this.state = {\n    //   message: `hello`,\n    //   publicKey: `-----BEGIN PUBLIC KEY----- MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKN03GZ63BSzHRR+HDubybzdPI/viDzS ERxqm4rhL5OU7LKRtooKHRr+ObCkzn+sxtad6Y+nGVlIM8JMdPWIF/sCAwEAAQ== -----END PUBLIC KEY-----`,\n    //   encryptedMessage: `nlt0ak2dqgus1ExcoY1cBrkSUrMtO16LMItzCO3vD1jCqjyLxIWUBHcS5iRQKTKMoQmE4wbgslKbF47kl2JJDA==`\n    // }\n  }\n  render() {\n    const {message, publicKey, encryptedMessage} = this.state\n\n    const setMessage = message => this.setState({message})\n    const setPublicKey = publicKey => this.setState({publicKey})\n\n    return <Paper elevation={1} className='paper'>\n      <div className='title' style={{marginBottom: 20}}>\n        Encrypt a Message\n      </div>\n      <div>\n        <div style={{marginBottom: 40}}>\n          <div>Enter your message into here</div>\n          <div>\n            <TextField\n              fullWidth={true}\n              id=\"outlined-textarea\"\n              label=\"Your message to be encrypted\"\n              placeholder=\"Your message to be encrypted\"\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={message ? message : ''}\n              onChange={e => setMessage(e.target.value)}\n            />\n          </div>\n        </div>\n        <div style={{marginBottom: 40}}>\n          <div>Paste the public key to use for this encryption</div>\n          <div style={{fontSize: 10}}>\n            <TextField\n              InputProps={{style: {fontSize: 10}}}\n              fullWidth={true}\n              id=\"outlined-textarea\"\n              label=\"The public key to encrypt the message with\"\n              placeholder=\"The public key to encrypt the message with\"\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={publicKey ? publicKey : ''}\n              onChange={e => setPublicKey(e.target.value)}\n            />\n          </div>\n        </div>\n        <div style={{marginBottom: 40}}>\n          <div style={{marginBottom: 10}}>Click this button to create the encrypted text</div>\n          <div>\n            <Fab size=\"small\" color=\"secondary\" onClick={() => {\n              encryptMessage({publicKey, message}).then(encryptedMessage => this.setState({encryptedMessage}))\n            }}>\n              <LockIcon />\n            </Fab>\n          </div>\n        </div>\n        <div>\n          <div style={{textAlign: 'center'}}>The encrypted message</div>\n          <div className='clipboarder' style={{backgroundColor: '#eee', borderRadius: 5, padding: 10}} onClick={e => {\n            if(!encryptedMessage) return\n            toClipboard({label: 'Copied encrypted message to clipboard', data: encryptedMessage})\n          }}>\n            {encryptedMessage ? <div style={{wordBreak: 'break-all'}}>\n              {encryptedMessage}\n            </div> : '-'}\n          </div>\n        </div>\n      </div>\n    </Paper>\n  }\n}\n","import React, {Component} from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Icon from '@material-ui/core/Icon'\nimport Fab from '@material-ui/core/Fab'\nimport TextField from '@material-ui/core/TextField'\nimport LockIcon from '@material-ui/icons/Lock';\nimport NodeRSA from 'node-rsa'\nimport Markdown from 'react-markdown'\nimport toClipboard from './toClipboard'\n\nconst decryptMessage = ({privateKey, encryptedMessage}) => new Promise((resolve, reject) => {\n  if(!privateKey) return reject()\n  if(!encryptedMessage) return reject()\n\n  const key = new NodeRSA(privateKey)\n  const decryptedMessage = key.decrypt(encryptedMessage, 'utf8')\n  resolve(decryptedMessage).catch(err => {\n    console.log(err)\n    throw err\n  })\n})\n\nexport default class DecryptMessage extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      privateKey: null,\n      encryptedMessage: null,\n      decryptedMessage: null\n    }\n\n    // this.state = {\n    //   privateKey: `-----BEGIN RSA PRIVATE KEY----- MIIBOQIBAAJBAKN03GZ63BSzHRR+HDubybzdPI/viDzSERxqm4rhL5OU7LKRtooK HRr+ObCkzn+sxtad6Y+nGVlIM8JMdPWIF/sCAwEAAQJAWKple/mdNGVMmvclnXgO YLKpzXIjtspEmeOCaD1qr2S04l6M2YtF/5fUL0QHgYcnV+sq+zVUS6J1K/yqvisP 4QIhANtFZOhfbCrO4st98iNMCewBXJ93a1/Bb9KvPgKPmfzjAiEAvtYSGEPvbF1R r3JeZUgu9CFLlJ+kGgYPazXeKk8TPAkCIDjkLGZOO9Zvj1CVAPo/hGODhvCpH2bc 3ZKgfUpUz/NZAiA2392SJq7JDUh41703CHuf7ZcLJKCObyGt5W594gEY6QIgPSPI Soca83GpRYMc3q796Di/F3Fs6DLpObUpiYEFpAY= -----END RSA PRIVATE KEY-----`,\n    //   encryptedMessage: `OnFmcomEh3uUhzSAcOouepW+gDjzsMt3Ce6tl7tW3GqYm9D3VE8eUymFX1S0x3ZpGYVru/aVYJJDzntOdPKSsQ==`,\n    //   decryptedMessage: null\n    // }\n  }\n  render() {\n    const {privateKey, encryptedMessage, decryptedMessage} = this.state\n\n    const setEncryptedMessage = encryptedMessage => this.setState({encryptedMessage})\n    const setPrivateKey = privateKey => this.setState({privateKey})\n\n    return <Paper elevation={1} className='paper'>\n      <div className='title' style={{marginBottom: 20}}>\n        Decrypt a Message\n      </div>\n      <div>\n        <div style={{marginBottom: 40}}>\n          <div>Enter the encrypted message into here</div>\n          <div>\n            <TextField\n              fullWidth={true}\n              id=\"outlined-textarea\"\n              label=\"Encrypted message goes here\"\n              placeholder=\"Encrypted message goes here\"\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={encryptedMessage ? encryptedMessage : ''}\n              onChange={e => setEncryptedMessage(e.target.value)}\n            />\n          </div>\n        </div>\n        <div style={{marginBottom: 40}}>\n          <div>Paste the private key to use for this decryption</div>\n          <div style={{fontSize: 10}}>\n            <TextField\n              InputProps={{style: {fontSize: 10}}}\n              fullWidth={true}\n              id=\"outlined-textarea\"\n              label=\"The private key to decrypt the message\"\n              placeholder=\"The private key to encrypt the message\"\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={privateKey ? privateKey : ''}\n              onChange={e => setPrivateKey(e.target.value)}\n            />\n          </div>\n        </div>\n        <div style={{marginBottom: 40}}>\n          <div style={{marginBottom: 10}}>Click this button to create the encrypted text</div>\n          <div>\n            <Fab size=\"small\" color=\"secondary\" onClick={() => {\n              decryptMessage({privateKey, encryptedMessage}).then(decryptedMessage => this.setState({decryptedMessage}))\n            }}>\n              <LockIcon />\n            </Fab>\n          </div>\n        </div>\n        <div>\n          <div style={{textAlign: 'center'}}>The decrypted message</div>\n          <div className='clipboarder' style={{backgroundColor: '#eee', borderRadius: 5, padding: 10}} onClick={e => {\n            if(!decryptedMessage) return\n            toClipboard({label: 'Copied encrypted message to clipboard', data: decryptedMessage})\n          }}>\n            {decryptedMessage ? <div style={{wordBreak: 'break-all'}}>\n              {decryptedMessage}\n            </div> : '-'}\n          </div>\n        </div>\n      </div>\n    </Paper>\n  }\n}\n","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport GenerateKeys from './GenerateKeys'\nimport EncryptMessage from './EncryptMessage'\nimport DecryptMessage from './DecryptMessage'\n\nwindow.toastr.options = {\n  progressBar: true\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      keypair: null\n    }\n  }\n  render() {\n    const {keypair} = this.state\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className='wrapper'>\n          <div className='box'>\n            <GenerateKeys\n              setKeypair={keypair => this.setState({keypair})}\n              keypair={keypair}\n            />\n          </div>\n          <div className='box'>\n            <EncryptMessage />\n          </div>\n          <div className='box'>\n            <DecryptMessage />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}